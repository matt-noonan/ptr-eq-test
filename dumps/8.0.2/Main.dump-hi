
==================== FINAL INTERFACE ====================
2017-10-20 12:58:11.02183 UTC

interface main@main:Main 8002
  interface hash: 91fc92fe8ace3b783d84f02503604386
  ABI hash: 6fcf83acbe857cc8a5666af9191466fa
  export-list hash: efd6564302e15243778790909d7d7de5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: efe2a3e0286f39e5aefacea7ebc749a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  external
  main
module dependencies:
package dependencies: base-4.9.1.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Unsafe 1c057c642b0e201f55a24585d3d94564
import  -/  base-4.9.1.0:GHC.Int e6f85fcab22769385fba2b5fce0acb40
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  base-4.9.1.0:System.IO.Unsafe 1e3c5b8dd8cf6850ae43cce967bb46cd
import  -/  base-4.9.1.0:System.Mem 4fc740d48c748ae0a8af2287969defdf
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Prim 00000000000000000000000000000000
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
8930389005701895a2df826da2f965cc
  $tc'Box :: TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (TyCon
                   3131712011714945789##
                   8815380752551364291##
                   $trModule
                   $tc'Box1) -}
f3241d7dfe7c03d73a5e4be84e8fbb29
  $tc'Box1 :: TrName
  {- HasNoCafRefs, Strictness: m1, Unfolding: (TrNameS "'Box"#) -}
0d7c8fbac70f8630eb014ac83558ab9e
  $tcBox :: TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (TyCon
                   2253243104280987293##
                   12966491905552233425##
                   $trModule
                   $tcBox1) -}
5aa26702486cdb70d399c7be5d48cbe2
  $tcBox1 :: TrName
  {- HasNoCafRefs, Strictness: m1, Unfolding: (TrNameS "Box"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Module $trModule2 $trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: TrName
  {- HasNoCafRefs, Strictness: m1, Unfolding: (TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: TrName
  {- HasNoCafRefs, Strictness: m1, Unfolding: (TrNameS "main"#) -}
ee256f44991261a6b06b6bfe7aee77ed
  newtype Box = Box Int
dcea19c35d84d8ee7f620cbdebbf4de8
  alfa :: [Int]
  {- Unfolding: (eftInt 0# 0#) -}
5c8fb03605eeb95394f494ec2f6c6f08
  external :: Bool
  {- Unfolding: (case runRW#
                        @ 'PtrRepLifted
                        @ Bool
                        external1 of ds { (#,#) ipv ipv1 ->
                 ipv1 }) -}
55b39edfe38829e9d008900b4e331a7f
  external1 :: State# RealWorld -> (# State# RealWorld, Bool #)
  {- Arity: 1,
     Unfolding: (\ (s :: State# RealWorld)[OneShot] ->
                 case noDuplicate# s of s' { DEFAULT ->
                 case alfa of wild {
                   [] -> case badHead ret_ty (# State# RealWorld, Bool #) of {}
                   : x ds1
                   -> case x of wild1 { I# ds ->
                      case ds of ds2 {
                        DEFAULT
                        -> case patError @ 'PtrRepLifted @ Box "src/Main.hs:27:40-63|case"#
                           ret_ty (# State# RealWorld, Bool #)
                           of {}
                        0#
                        -> case {__pkg_ccall_GC base-4.9.1.0 performMajorGC State#
                                                                              RealWorld
                                                                            -> (# State#
                                                                                    RealWorld #)}
                                  s' of wild2 { Unit# ds3 ->
                           (# ds3,
                              case reallyUnsafePtrEquality# @ Int wild1 wild1 of wild3 {
                                DEFAULT -> False 1# -> True } #) } } } } }) -}
ca075684700a4fcd3b76edd863d50722
  main :: IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                main1 `cast` (Sym (N:IO[0] <()>_R)) -}
c4eb03cd55f00d222ee20d49e6317a05
  main1 :: State# RealWorld -> (# State# RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: State# RealWorld)[OneShot] ->
                 hPutStr2 stdout main2 True eta) -}
1bf4e69c87cdb08ef7deb58e69a37e90
  main2 :: String
  {- Unfolding: (case runRW#
                        @ 'PtrRepLifted
                        @ Bool
                        main3 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { False -> shows18 True -> shows17 } }) -}
37653d05921970862c6ba85c8b2d7d28
  main3 :: State# RealWorld -> (# State# RealWorld, Bool #)
  {- Arity: 1,
     Unfolding: (\ (s :: State# RealWorld)[OneShot] ->
                 case noDuplicate# s of s' { DEFAULT ->
                 case alfa of wild {
                   [] -> case badHead ret_ty (# State# RealWorld, Bool #) of {}
                   : x ds1
                   -> case x of wild1 { I# ds ->
                      case ds of ds2 {
                        DEFAULT
                        -> case patError @ 'PtrRepLifted @ Box "src/Main.hs:23:40-63|case"#
                           ret_ty (# State# RealWorld, Bool #)
                           of {}
                        0#
                        -> case {__pkg_ccall_GC base-4.9.1.0 performMajorGC State#
                                                                              RealWorld
                                                                            -> (# State#
                                                                                    RealWorld #)}
                                  s' of wild2 { Unit# ds3 ->
                           (# ds3,
                              case reallyUnsafePtrEquality# @ Int wild1 wild1 of wild3 {
                                DEFAULT -> False 1# -> True } #) } } } } }) -}
64f9040bfd0b3d9c3fb1861f90e78c4d
  main4 :: State# RealWorld -> (# State# RealWorld, () #)
  {- Arity: 1,
     Unfolding: (runMainIO1 @ () main1 `cast` (Sym (N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

